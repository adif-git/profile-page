{"ast":null,"code":"var _jsxFileName = \"/home/adif/react-project/profile-page/src/components/Header.js\";\n// THIS IS HEADER PART OF THE WEB\nimport React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-scroll';\nimport './Header.css';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.listenToScroll = () => {\n      const winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n      const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n      const scrolled = winScroll / height; // console.log(scrolled)\n\n      this.setState({\n        position: scrolled\n      });\n      let nav = document.getElementById('nav');\n\n      if (this.state.position > 0.045) {\n        nav.classList.add(\"navbar-colored\");\n        nav.classList.remove(\"navbar\");\n      } else {\n        nav.classList.add(\"navbar\");\n        nav.classList.remove(\"navbar-colored\");\n      }\n    };\n\n    this.state = {\n      position: 0\n    };\n    this.listenToScroll = this.listenToScroll.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.listenToScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.listenToScroll);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"aboutme-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/adif/react-project/profile-page/src/components/Header.js"],"names":["React","Navbar","Nav","Link","Header","Component","constructor","props","listenToScroll","winScroll","document","body","scrollTop","documentElement","height","scrollHeight","clientHeight","scrolled","setState","position","nav","getElementById","state","classList","add","remove","bind","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,GAAhB,QAA0B,iBAA1B;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAgBlBC,cAhBkB,GAgBH,MAAI;AACjB,YAAMC,SAAS,GAAGC,QAAQ,CAACC,IAAT,CAAcC,SAAd,IAA2BF,QAAQ,CAACG,eAAT,CAAyBD,SAAtE;AACA,YAAME,MAAM,GAAGJ,QAAQ,CAACG,eAAT,CAAyBE,YAAzB,GAAwCL,QAAQ,CAACG,eAAT,CAAyBG,YAAhF;AACA,YAAMC,QAAQ,GAAGR,SAAS,GAAGK,MAA7B,CAHiB,CAIjB;;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAEF;AADE,OAAd;AAIA,UAAIG,GAAG,GAAGV,QAAQ,CAACW,cAAT,CAAwB,KAAxB,CAAV;;AACA,UAAG,KAAKC,KAAL,CAAWH,QAAX,GAAsB,KAAzB,EAA+B;AAC3BC,QAAAA,GAAG,CAACG,SAAJ,CAAcC,GAAd,CAAkB,gBAAlB;AACAJ,QAAAA,GAAG,CAACG,SAAJ,CAAcE,MAAd,CAAqB,QAArB;AACH,OAHD,MAII;AACAL,QAAAA,GAAG,CAACG,SAAJ,CAAcC,GAAd,CAAkB,QAAlB;AACAJ,QAAAA,GAAG,CAACG,SAAJ,CAAcE,MAAd,CAAqB,gBAArB;AACH;AACF,KAlCiB;;AAEhB,SAAKH,KAAL,GAAW;AACTH,MAAAA,QAAQ,EAAE;AADD,KAAX;AAIA,SAAKX,cAAL,GAAsB,KAAKA,cAAL,CAAoBkB,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AACDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKrB,cAAvC;AACD;;AAEDsB,EAAAA,oBAAoB,GAAE;AACpBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKvB,cAA1C;AACD;;AAqBDwB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAuBD;;AA5DiC;;AA+DpC,eAAe5B,MAAf","sourcesContent":["// THIS IS HEADER PART OF THE WEB\n\nimport React from 'react'\nimport {Navbar, Nav} from 'react-bootstrap'\nimport {Link} from 'react-scroll'\nimport './Header.css'\n\nclass Header extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      position: 0,\n    };\n\n    this.listenToScroll = this.listenToScroll.bind(this);\n  }\n  componentDidMount(){\n    window.addEventListener('scroll', this.listenToScroll)\n  }\n\n  componentWillUnmount(){\n    window.removeEventListener('scroll', this.listenToScroll)\n  }\n\n  listenToScroll=()=>{\n    const winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n    const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n    const scrolled = winScroll / height;\n    // console.log(scrolled)\n    this.setState({\n      position: scrolled,\n    })\n\n    let nav = document.getElementById('nav');\n    if(this.state.position > 0.045){\n        nav.classList.add(\"navbar-colored\");\n        nav.classList.remove(\"navbar\");\n    }\n    else{\n        nav.classList.add(\"navbar\");\n        nav.classList.remove(\"navbar-colored\");\n    }\n  }\n  render(){\n    return(\n      <div className=\"aboutme-section\">\n        {/* <Navbar collapseOnSelect expand=\"lg\" fixed=\"top\" id=\"nav\" className=\"navbar navbar-dark p-3 \">\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"navbar-light\"/>\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <Link activeClass=\"active\" to=\"aboutme-section\" className=\"nav-content\" offset={-60}  smooth={true} duration={500}>\n                About Me\n              </Link>\n              <Link activeClass=\"active\" to=\"skills-section\" className=\"nav-content\" offset={-60}  smooth={true} duration={500}>\n                Skills\n              </Link>\n              <Link activeClass=\"active\" to=\"work-section\" className=\"nav-content\" offset={-60} smooth={true} duration={500}>\n                Work Experiences\n              </Link>\n              <Link activeClass=\"active\" to=\"projects-section\" className=\"nav-content\" offset={-60}  smooth={true} duration={500}>\n                Projects\n              </Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar> */}\n      </div>\n    );\n  }\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}