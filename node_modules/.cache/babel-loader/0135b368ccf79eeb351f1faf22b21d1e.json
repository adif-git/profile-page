{"ast":null,"code":"var _jsxFileName = \"/home/adif/react-project/profile-page/src/components/Projects.js\";\nimport React from 'react';\nimport './Projects.css';\n\nclass Projects extends React.Component {\n  //OBJECTS OF PROJECTS\n  render() {\n    const projectList = [{\n      id: '1',\n      name: 'Quadcopter for Vehicle Counting',\n      image: './Images/42612.jpg',\n      tags: ['Raspberry Pi', 'Computer Vision', 'Embedded System', 'C++'],\n      description: \"Build from scratch quadcopter with only purpose to count number of vehicles that are travel on road in real time using computer vision. Capable to count with approximately 60% accuracy because calculated without machine learning. Besides number of vehicles, quadcopter's altitude and video stream also will be recorded.\",\n      media: 'https://drive.google.com/file/d/1m7gDiac_ph88rR9GnaivVQUR7A81-cin/view?usp=sharing',\n      github: '/#'\n    }, {\n      id: '2',\n      name: 'Library',\n      image: 'https://raw.githubusercontent.com/adif-git/library/master/Screenshot/Homepage.png',\n      tags: ['Web Development', 'Django', 'HTML', 'CSS', 'Python', 'MySQL'],\n      description: 'First time on building website using Django and MySQL as backend. Authorized users have access to add, update, and delete book/author.',\n      media: 'https://github.com/adif-git/library/tree/master/Screenshot',\n      github: 'https://github.com/adif-git/library'\n    }, {\n      id: '3',\n      name: 'Goalkeeper Robot',\n      image: './Images/Goalkeeper.png',\n      tags: ['Raspberry Pi', 'Arduino', 'Computer Vision', 'Embedded System', 'C++'],\n      description: 'Robot will autonomously move and follow wherever ball is moving like a goalkeeper. Developed in C++ with computer vision based on color detection.',\n      media: 'https://drive.google.com/file/d/1J-nxprEs1lAsyPAfUe4oy9mDJ-SHl0qu/view?usp=sharing',\n      github: '/#'\n    }, {\n      id: '4',\n      name: 'Hexapod Robot',\n      image: './Images/Hexapod.png',\n      tags: ['Raspberry Pi', 'Arduino', 'Embedded System', 'C++', 'Python'],\n      description: 'Hexapod robot which can be remotely control through WiFi. User will control robot movement wirelessly.',\n      media: 'https://drive.google.com/file/d/1XmU0Hye5k8mDxEsuXnGH0R1XJnGS0aVL/view?usp=sharing',\n      github: '/#'\n    }, {\n      id: '5',\n      name: 'Water Tandon',\n      image: 'https://raw.githubusercontent.com/adif-git/Water-Tandon/master/WaterTandon.png',\n      tags: ['Embedded System', 'Assembly', 'AT89S51'],\n      description: 'This is my water tandon project using AT89S51 Microcontroller in Assembly Language. Sensors are used to indicate water level in the container and water level will be showed using 2 red LED. White LED shows on water pump behaviour.',\n      media: 'https://drive.google.com/file/d/1-6Y2x8fUxX5pQXpT8p4y0iOeyCPnkuoK/view?usp=sharing',\n      github: 'https://github.com/adif-git/Water-Tandon'\n    }, {\n      id: '6',\n      name: 'Project Tracker',\n      image: 'https://raw.githubusercontent.com/adif-git/Project-Tracker/master/Screenshot/1.png',\n      tags: ['Web Development', 'Node.js', 'HTML', 'CSS', 'JavaScript', 'Bootstrap', 'MySQL'],\n      description: \"Project Tracker website for tracking your own side projects build using Node.js and MySQL as database. This website contain two main parts, Project List and Task List. Project List is a list which define your main idea when doing projects. Task list is a list of task on what will you be doing from specific project. User can change each task's status (Pending, On Progress, or Completed).\",\n      media: 'https://github.com/adif-git/Project-Tracker/tree/master/Screenshot',\n      github: 'https://github.com/adif-git/Project-Tracker'\n    }, {\n      id: '7',\n      name: 'GitHub Profile Page',\n      image: './Images/Profile.png',\n      tags: ['Web Development', 'React.js', 'HTML', 'CSS', 'JavaScript', 'Bootstrap'],\n      description: 'This profile page build using React.js. Visit my GitHub page to see other projects.',\n      media: 'https://adif-git.github.io/profile-page/',\n      github: 'https://github.com/adif-git/profile-page'\n    }]; //FUNCTION TO EXTRACT ALL TAGS INFO IN PROJECT OBJECT\n\n    const tagsContent = tagsList => {\n      let content = [];\n\n      for (let idx in tagsList) {\n        content.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col tags pt-2\",\n          key: tagsList[idx],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }\n        }, tagsList[idx]));\n      }\n\n      return content;\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid projects-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 31\n      }\n    }, \"\\xBB\"), \"PROJECTS\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 75\n      }\n    }, \"\\xAB\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-columns mx-4 mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, projectList.map(projectItem => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"project card pb-2\",\n        key: projectItem.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: projectItem.image,\n        className: \"card-img-top\",\n        alt: \"...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, projectItem.name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"fa fa-github fa-lg\",\n        href: projectItem.github,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"a\", {\n        className: \"fa fa-image fa-lg\",\n        href: projectItem.media,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }, projectItem.description), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row row-cols-2 border-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, tagsContent(projectItem.tags))));\n    })));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/home/adif/react-project/profile-page/src/components/Projects.js"],"names":["React","Projects","Component","render","projectList","id","name","image","tags","description","media","github","tagsContent","tagsList","content","idx","push","map","projectItem"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Projects.css'\n\nclass Projects extends React.Component{\n  //OBJECTS OF PROJECTS\n  render(){\n    const projectList = [\n      {\n        id: '1',\n        name: 'Quadcopter for Vehicle Counting',\n        image: './Images/42612.jpg',\n        tags:['Raspberry Pi', 'Computer Vision', 'Embedded System', 'C++'],\n        description: \"Build from scratch quadcopter with only purpose to count number of vehicles that are travel on road in real time using computer vision. Capable to count with approximately 60% accuracy because calculated without machine learning. Besides number of vehicles, quadcopter's altitude and video stream also will be recorded.\",\n        media: 'https://drive.google.com/file/d/1m7gDiac_ph88rR9GnaivVQUR7A81-cin/view?usp=sharing',\n        github: '/#',\n      },\n      {\n        id: '2',\n        name: 'Library',\n        image: 'https://raw.githubusercontent.com/adif-git/library/master/Screenshot/Homepage.png',\n        tags:['Web Development', 'Django', 'HTML', 'CSS', 'Python', 'MySQL'],\n        description: 'First time on building website using Django and MySQL as backend. Authorized users have access to add, update, and delete book/author.',\n        media: 'https://github.com/adif-git/library/tree/master/Screenshot',\n        github: 'https://github.com/adif-git/library',\n      },\n      {\n        id: '3',\n        name: 'Goalkeeper Robot',\n        image: './Images/Goalkeeper.png',\n        tags:['Raspberry Pi', 'Arduino', 'Computer Vision', 'Embedded System', 'C++'],\n        description: 'Robot will autonomously move and follow wherever ball is moving like a goalkeeper. Developed in C++ with computer vision based on color detection.',\n        media: 'https://drive.google.com/file/d/1J-nxprEs1lAsyPAfUe4oy9mDJ-SHl0qu/view?usp=sharing',\n        github: '/#',\n      },\n      {\n        id: '4',\n        name: 'Hexapod Robot',\n        image: './Images/Hexapod.png',\n        tags:['Raspberry Pi', 'Arduino', 'Embedded System', 'C++', 'Python'],\n        description: 'Hexapod robot which can be remotely control through WiFi. User will control robot movement wirelessly.',\n        media: 'https://drive.google.com/file/d/1XmU0Hye5k8mDxEsuXnGH0R1XJnGS0aVL/view?usp=sharing',\n        github: '/#',\n      },\n      {\n        id: '5',\n        name: 'Water Tandon',\n        image: 'https://raw.githubusercontent.com/adif-git/Water-Tandon/master/WaterTandon.png',\n        tags:['Embedded System', 'Assembly', 'AT89S51'],\n        description: 'This is my water tandon project using AT89S51 Microcontroller in Assembly Language. Sensors are used to indicate water level in the container and water level will be showed using 2 red LED. White LED shows on water pump behaviour.',\n        media: 'https://drive.google.com/file/d/1-6Y2x8fUxX5pQXpT8p4y0iOeyCPnkuoK/view?usp=sharing',\n        github: 'https://github.com/adif-git/Water-Tandon',\n      },\n      {\n        id: '6',\n        name: 'Project Tracker',\n        image: 'https://raw.githubusercontent.com/adif-git/Project-Tracker/master/Screenshot/1.png',\n        tags:['Web Development', 'Node.js', 'HTML', 'CSS', 'JavaScript', 'Bootstrap', 'MySQL'],\n        description: \"Project Tracker website for tracking your own side projects build using Node.js and MySQL as database. This website contain two main parts, Project List and Task List. Project List is a list which define your main idea when doing projects. Task list is a list of task on what will you be doing from specific project. User can change each task's status (Pending, On Progress, or Completed).\",\n        media: 'https://github.com/adif-git/Project-Tracker/tree/master/Screenshot',\n        github: 'https://github.com/adif-git/Project-Tracker',\n      },\n      {\n        id: '7',\n        name: 'GitHub Profile Page',\n        image: './Images/Profile.png',\n        tags:['Web Development', 'React.js', 'HTML', 'CSS', 'JavaScript', 'Bootstrap'],\n        description: 'This profile page build using React.js. Visit my GitHub page to see other projects.',\n        media: 'https://adif-git.github.io/profile-page/',\n        github: 'https://github.com/adif-git/profile-page',\n      },\n    ];\n\n    //FUNCTION TO EXTRACT ALL TAGS INFO IN PROJECT OBJECT\n    const tagsContent = tagsList => {\n      let content = [];\n      for(let idx in tagsList)\n      {\n        content.push(\n          <div className=\"col tags pt-2\" key={tagsList[idx]}>{tagsList[idx]}</div>\n        );\n      }\n      return content;\n    };\n\n    return(\n      <div className=\"container-fluid projects-section\">\n        <h1 className=\"title\"><span className=\"sign\">&#187;</span>PROJECTS<span className=\"sign\">&#171;</span></h1>\n        <div className=\"card-columns mx-4 mt-5\">\n          {projectList.map((projectItem)=>{\n              return(\n                <div className=\"project card pb-2\" key={projectItem.id}>\n                  <img src={projectItem.image} className=\"card-img-top\" alt=\"...\" />\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{projectItem.name}</h5>\n                    <div className=\"container\">\n                      <div className=\"d-flex justify-content-center\">\n                        <a className=\"fa fa-github fa-lg\" href={projectItem.github}></a>\n                        <a className=\"fa fa-image fa-lg\" href={projectItem.media}></a>\n                      </div>\n                    </div>\n                    <p className=\"card-text\">{projectItem.description}</p>\n                    <div className=\"row row-cols-2 border-top\">\n                      {tagsContent(projectItem.tags)}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}